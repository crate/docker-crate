## -*- docker-image-name: "docker-crate" -*-
#
# Crate Dockerfile
# https://github.com/crate/docker-crate
#

# Prebuild Stage
# Download, extract and verify CrateDB, Crash and Gosu artifacts.

FROM centos:7 as prebuild

RUN groupadd -g 1000 crate && adduser -u 1000 -g 1000 -d /crate crate
WORKDIR /crate
USER 1000

ENV CRATE_VERSION XXX
RUN curl -fSL -O https://cdn.crate.io/downloads/releases/crate-$CRATE_VERSION.tar.gz \
    && curl -fSL -O https://cdn.crate.io/downloads/releases/crate-$CRATE_VERSION.tar.gz.asc \
    && export GNUPGHOME="$(mktemp -d)" \
    && gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 90C23FC6585BC0717F8FBFC37FAAE51A06F6EAEB \
    && gpg --batch --verify crate-$CRATE_VERSION.tar.gz.asc crate-$CRATE_VERSION.tar.gz \
    && rm -rf "$GNUPGHOME" crate-$CRATE_VERSION.tar.gz.asc \
    && tar -xf crate-$CRATE_VERSION.tar.gz --strip-components=1 \
    && rm crate-$CRATE_VERSION.tar.gz

COPY --chown=1000:0 config/crate.yml /config/crate.yml
COPY --chown=1000:0 config/log4j2.properties config/log4j2.properties

USER 0
WORKDIR /usr/local/bin

ENV CRASH_VERSION YYY
RUN curl -fSL -O https://cdn.crate.io/downloads/releases/crash_standalone_$CRASH_VERSION \
    && curl -fSL -O https://cdn.crate.io/downloads/releases/crash_standalone_$CRASH_VERSION.asc \
    && export GNUPGHOME="$(mktemp -d)" \
    && gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 90C23FC6585BC0717F8FBFC37FAAE51A06F6EAEB \
    && gpg --batch --verify crash_standalone_$CRASH_VERSION.asc crash_standalone_$CRASH_VERSION \
    && rm -rf "$GNUPGHOME" crash_standalone_$CRASH_VERSION.asc \
    && mv crash_standalone_$CRASH_VERSION crash \
    && chmod +x crash

RUN chown -R crate:0 . && chmod -R g=u /crate


# Main Build Stage
# Copy artifacts from prebuild stage, add entrypoint.

FROM centos:7
MAINTAINER Crate.IO GmbH office@crate.io

COPY --from=prebuild --chown=1000:0 /crate /crate
COPY --from=prebuild /usr/local/bin/crash /usr/local/bin/crash

RUN yum update -y \
    && groupadd crate && adduser -g crate -M crate \
    && yum install -y centos-release-scl java-1.8.0-openjdk \
    && yum install -y rh-python36 \
    && ln -sf /usr/bin/python3 /usr/bin/python

ENV PATH /crate/bin:$PATH
# Default heap size for Docker, can be overwritten by args
ENV CRATE_HEAP_SIZE 512M

# This healthcheck indicates if a CrateDB node is up and running. It will fail
# if we cannot get any response from the CrateDB (connection refused, timeout
# etc). If any response is received (regardless of http status code) we
# consider the node as running.
HEALTHCHECK --timeout=30s --interval=30s CMD curl --fail --max-time 25 $(hostname):4200

RUN mkdir -p /data/data /data/log

VOLUME /data


COPY docker-entrypoint.sh /

WORKDIR /data

# http: 4200 tcp
# transport: 4300 tcp
# postgres protocol ports: 5432 tcp
EXPOSE 4200 4300 5432

ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["crate"]
